name: Docs deploy
on:
  workflow_run:
    workflows: ["Docs build"]
    types:
      - completed

jobs:
  checks:
    runs-on: ubuntu-latest
    outputs:
      parameters: ${{ steps.parameters.outputs.result }}
    steps:
      - if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: echo 'The triggering workflow failed' && exit 1
      
      - name: Determine deploy parameters
        id: parameters
        uses: actions/github-script@v7
        with:
          script: |
            const eventType = context.payload.workflow_run.event;
            const isFork = context.payload.workflow_run.repository.fork;

            let parameters;

            console.log({eventType, isFork});

            if (eventType == "push") {
              const branch = context.payload.workflow_run.head_branch;
              console.log({branch});
              const shouldDeploy = !isFork && branch == "main";
              parameters = {
                event: "branch",
                name: "main",
                shouldDeploy
              };
            } else if (eventType == "pull_request") {
              const pull_number = context.payload.workflow_run.pull_requests[0].number;
              const {data: pr} = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number
              });
              const isApproved = pr.labels.some((l) => l.name == "preview-docs");

              console.log({pull_number, isApproved});

              parameters = {
                event: "pr",
                name: pull_number,
                shouldDeploy: !isFork || isApproved
              };
            } else if (eventType == "release") {
              parameters = {
                event: "release",
                name: context.payload.workflow_run.head_branch,
                shouldDeploy: !isFork
              };
            }

            console.log(parameters);
            return parameters;
  
  deploy:
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ fromJson(needs.checks.outputs.parameters).shouldDeploy }}
    steps:
      - name: Load parameters
        id: parameters
        uses: actions/github-script@v7
        with:
          script: |
            const json = `${{ needs.checks.outputs.parameters }}`;
            const parameters = JSON.parse(json);
            core.setOutput("event", parameters.event);
            core.setOutput("name", parameters.name);
            core.setOutput("shouldDeploy", parameters.shouldDeploy);
      
      - run: |
          echo "Starting docs deployment for ${{ steps.parameters.outputs.name }} (trigger: ${{ steps.parameters.outputs.event }})"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-build-output
          path: docs-artifact/
          run-id: ${{ github.event.workflow_run.id }}

      # TODO: Terraform shenanigans
      
      - name: Comment
        uses: actions/github-script@v7
        if: ${{ steps.parameters.outputs.event == 'pr' }}
        # TODO: Probably get the URL as an output from terraform
        with:
          script: |
            const name = "${{ steps.parameters.outputs.name }}";
            const comment = "ðŸ“– Documentation preview deployed to " + name + ".preview.immich.app";
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
